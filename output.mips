.data
err_string: .asciiz "\ndivide by zero error!\n"
nextline_string: .asciiz "\n"
.text
li $s0, 0
sw $s0, 96($gp)
li $s0 , 2
addi $sp,$sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp,$sp,4
lw $s1, 96($gp)
addi $s3, $s1, 104
add $s3, $s3, $gp
sw $s0, 0($s3)
li $s0,200
sw $s0, 96($gp)
jal main
li $v0, 17
lw $a0, 0($sp)
addi $sp, $sp,4
syscall
fib: lw $a0,0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $ra,0($sp)
addi $sp, $sp,-4
sw $a0, 0($sp)
lw $s0, 0($sp)
addi $sp,$sp,4
lw $s1, 96($gp)
addi $s3, $s1, 108
add $s3, $s3, $gp
sw $s0, 0($s3)
lw $s1,96($gp)
addi $s2,$s1,108
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
li $s0 , 1
addi $sp,$sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
beq $s0,$s1,OperatorEqual_true0
li $s0, 0
j OperatorEqual_write0
OperatorEqual_true0: li $s0, 1
OperatorEqual_write0: addi $sp, $sp,-4
sw $s0,0($sp)
lw $s1,96($gp)
addi $s2,$s1,108
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
li $s0 , 2
addi $sp,$sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
beq $s0,$s1,OperatorEqual_true1
li $s0, 0
j OperatorEqual_write1
OperatorEqual_true1: li $s0, 1
OperatorEqual_write1: addi $sp, $sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
bne $s0,$zero,BinaryOR_True2
bne $s1,$zero,BinaryOR_True2
li $s0,0
j BinaryOR_write2
BinaryOR_True2: li $s0,1
BinaryOR_write2: addi $sp, $sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
beq $s0,$zero, a101
li $s0 , 1
addi $sp,$sp,-4
sw $s0,0($sp)
lw $v0, 0($sp)
addi $sp, $sp,4
lw $s0,96($gp)
addi $s0,$s0, -20
sw $s0,96($gp)
lw $ra, 0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $v0, 0($sp)
jr $ra
j a158
a101: lw $s1,96($gp)
addi $s2,$s1,108
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
li $s0 , 1
addi $sp,$sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
sub $s2,$s1,$s0
addi $sp, $sp,-4
sw $s2,0($sp)
lw $s0,96($gp)
addi $s0,$s0, 20
sw $s0,96($gp)
jal fib
lw $s1,96($gp)
addi $s2,$s1,108
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
li $s0 , 2
addi $sp,$sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
sub $s2,$s1,$s0
addi $sp, $sp,-4
sw $s2,0($sp)
lw $s0,96($gp)
addi $s0,$s0, 20
sw $s0,96($gp)
jal fib
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
add $s2,$s1,$s0
addi $sp, $sp,-4
sw $s2,0($sp)
lw $v0, 0($sp)
addi $sp, $sp,4
lw $s0,96($gp)
addi $s0,$s0, -20
sw $s0,96($gp)
lw $ra, 0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $v0, 0($sp)
jr $ra
a158: lw $s0,96($gp)
addi $s0,$s0, -20
sw $s0,96($gp)
lw $ra, 0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $v0, 0($sp)
jr $ra
x: lw $a1,0($sp)
addi $sp, $sp,4
lw $a0,0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $ra,0($sp)
addi $sp, $sp,-4
sw $a0, 0($sp)
lw $s0, 0($sp)
addi $sp,$sp,4
lw $s1, 96($gp)
addi $s3, $s1, 112
add $s3, $s3, $gp
sw $s0, 0($s3)
addi $sp, $sp,-4
sw $a1, 0($sp)
lw $s0, 0($sp)
addi $sp,$sp,4
lw $s1, 96($gp)
addi $s3, $s1, 116
add $s3, $s3, $gp
sw $s0, 0($s3)
lw $s1,96($gp)
addi $s2,$s1,112
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
lw $s1,96($gp)
addi $s2,$s1,116
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
sub $s2,$s1,$s0
addi $sp, $sp,-4
sw $s2,0($sp)
lw $v0, 0($sp)
addi $sp, $sp,4
lw $s0,96($gp)
addi $s0,$s0, -28
sw $s0,96($gp)
lw $ra, 0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $v0, 0($sp)
jr $ra
lw $s0,96($gp)
addi $s0,$s0, -28
sw $s0,96($gp)
lw $ra, 0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $v0, 0($sp)
jr $ra
main: addi $sp, $sp,-4
sw $ra,0($sp)
li $v0,5
syscall
addi $sp,$sp,-4
sw $v0,0($sp)
lw $s0, 0($sp)
addi $sp,$sp,4
lw $s1, 96($gp)
addi $s3, $s1, 120
add $s3, $s3, $gp
sw $s0, 0($s3)
li $s0 , 1
addi $sp,$sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp,$sp,4
lw $s1, 96($gp)
addi $s3, $s1, 124
add $s3, $s3, $gp
sw $s0, 0($s3)
a246: lw $s1,96($gp)
addi $s2,$s1,124
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
lw $s1,96($gp)
addi $s2,$s1,120
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
lw $s1, 0($sp)
addi $sp, $sp,4
slt $s0,$s0, $s1
neg $s0,$s0
addi $s0,$s0,1
addi $sp, $sp,-4
sw $s0,0($sp)
lw $s0, 0($sp)
addi $sp, $sp,4
beq $s0,$zero, a319
j a289
a271: lw $s1,96($gp)
add $s1,$s1,$gp
addi $s2,$s1, 124
lw $s0, 0($s2)
addi $s2,$s0, 1
addi $sp, $sp,-4
sw $s0,0($sp)
addi $sp, $sp,-4
sw $s2,0($sp)
lw $s0, 0($sp)
addi $sp,$sp,4
lw $s1, 96($gp)
addi $s3, $s1, 124
add $s3, $s3, $gp
sw $s0, 0($s3)
lw $v1, 0($sp)
addi $sp, $sp,4
j a246
a289: lw $s1,96($gp)
addi $s2,$s1,124
add $s2,$s2,$gp
lw $s0,0($s2)
addi $sp, $sp,-4
sw $s0,0($sp)
lw $s0,96($gp)
addi $s0,$s0, 20
sw $s0,96($gp)
jal fib
li $s0 , 1
addi $sp,$sp,-4
sw $s0,0($sp)
lw $s0,96($gp)
addi $s0,$s0, 28
sw $s0,96($gp)
jal x
li $v0,1
lw $a0,0($sp)
addi $sp,$sp,4
syscall
li $v0,4
la $a0,nextline_string
syscall
li $v0,0
addi $sp,$sp,-4
sw $v0,0($sp)
lw $v1, 0($sp)
addi $sp, $sp,4
j a271
a319: li $v0,0
lw $s0,96($gp)
addi $s0,$s0, -12
sw $s0,96($gp)
lw $ra, 0($sp)
addi $sp, $sp,4
addi $sp, $sp,-4
sw $v0, 0($sp)
jr $ra

